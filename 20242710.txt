# 2024/07/10

[트랙특화] ChatGPT 챗봇 Programming

## <우리의 목표>

파이썬 2주 -> 알고리즘 4주
sw역량 테스트 IM 첫 시험에 취득(이후 A형 준비) 

웹 프레임워크 백엔드 django(파이썬 기반)

## <git>

1. git(로컬 저장소)----------github, gitlab(원격 저장소)
2. bash를 쓰기 위함

<Interface(리모컨) 종류>

- GUI(Graphic User Interface)

ex) Windows GUI

- CLI(Command Line Interface)/TUI(Text User Interface)로 이해하기

ex) cmd(윈도우 기반) /powershell, bash(리눅스 기반)

- 왜 개발자들은 bash를 더 많이 쓸까? => bash는 방향키로 전에 입력했던 명령어들을 재사용 가능. bash는 tab키를 이용해서 자동완성 가능. 간편한 명령어, 편리한 개발환경, 빠름

## <IDE: 통합 개발 환경>

VScode는 IDE가 아님.(텍스트 에디터임) 그런데 익스텐션을 이용해서 IDE처럼 사용 가능

## IDE의 종류

C#: Visual Studio
Python: PyCharm, 쥬피터 노트북
JAVA: IntelliJ

## <API>

-URL: “https://”로 시작하는 웹 주소

-API(Application Programming Interface): 클라이언트가 서버에게 요청하는 규칙

(API키는 서버 개발자가 정함.)

나는 프론트 앤드 밖에 안 짰는데 서버도 이용할 수 있네?

이게 가능하게 해주는 API. OK?

## <Framework>

나는 개발자로서 프로그램을 만들거야!!

1. 맨땅에 헤딩(처음부터 끝까지)
2. 소스코드를 다운받아서 수정하는 방법 =======⇒ 이게 프레임워크(이미 짜여진 소스코드)

Python: Django / Flask

Java: Spring Boot / Spring MVC(아시아권, 특히 한국에서 많이 씀.)

C#: ASP Net Core (미국에서만 주로 사용)

JavaScript: Express(미국에서 엄청 쓰임)

오늘 한 내용은 프론트엔드. . . 자바스크립트+html+css

우리는 자바스크립트에서 api를 추가해보았다.

백엔드가 없어도 서버를 api로 연동시켰기 때문에 서버가 있는것과 같은 효과를 얻을 수 있었다.

# <Git>

로컬 저장소임.

MINGW64: 리눅스에서 사용되는 툴들을 윈도우에서 쓸 수 있게 가볍게 만든 프로젝트

~: Home directory

cd ~: 홈 디렉토리로 가기

cd -: 뒤로가기

cd ..: 상위 디렉토리로 가기

ctrl + L: 새로고침

ctrl + C: 위치 확인하기

working directory   (add)→   staging area     (commit)→  repository      (push)—> remote repository/((github))

$git init     #시작

$rm -rf .git     또는 git 폴더 삭제하기     #종료(remove 약자)

$touch a.txt      #제목이 a인 텍스트파일을 CLI로 생성

$ls     #파일 내부 확인

$mkdir new_folder    #new_folder라는 폴더를 CLI로 생성

$rm -r new_folder    #파일 삭제

$git clone https://github.com/PARKMINJE2/first_practice.git(shift+insert)

$git add .     #모든 파일 add

$git status    #상태 확인. commit 할 상태가 되었나 확인

$git config —global [user.name](http://user.name) “”     #최초 1회 이름 설정 

$git config —global [user.email](http://user.email) “”     #최초 1회 이메일 설정

$git commit -m “”    #commit

$git log    #commit 되었나 확인

$git push -u (“shift + insert”) master    #push로 마무리
